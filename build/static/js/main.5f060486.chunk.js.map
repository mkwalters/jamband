{"version":3,"sources":["views/info.jsx","views/signup.jsx","views/login.jsx","UserContext.jsx","views/discover.jsx","components/Message.js","components/Progress.js","components/FileUpload.js","views/song.jsx","views/create.jsx","views/BackingTracks.jsx","components/Appbar.js","App.js","reportWebVitals.js","index.js"],"names":["Info","className","Component","useStyles","makeStyles","root","minWidth","margin","backgroundColor","display","title","fontSize","author","tree","Signup","classes","style","marginTop","marginBottom","class","Card","CardContent","action","method","type","name","placeholder","Login","useState","to","CardActions","UserContext","createContext","bullet","transform","Discover","useContext","setUser","user","songs","setSongs","currentSongId","setCurrentSongId","getUser","a","fetch","then","data","json","useEffect","map","song","index","justifyContent","song_id","toString","Typography","color","gutterBottom","username","src","s3key","onPlay","e","opacity","Message","msg","role","Progress","percentage","width","_","require","Alert","props","elevation","variant","theme","spacing","FileUpload","React","open","setOpen","file","setFile","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","songName","setSongName","handleClose","event","reason","onSubmit","keys","length","preventDefault","formData","FormData","append","previousPath","user_id","original","axios","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","res","setTimeout","fileName","filePath","response","status","Snackbar","autoHideDuration","onClose","severity","TextField","value","onChange","target","id","label","files","alt","Song","useParams","songData","setSongData","remixing","setRemixing","allSongData","setAllSongData","familyTree","setFamilyTree","console","log","originalAncestor","path","split","input","output","i","chain","currentNode","j","wantedNode","lastNode","k","pathName","children","newNode","transformedData","IconButton","onClick","url","Error","blob","blobURL","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","catch","Button","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","onNodeSelect","forEach","datum","renderTree","nodes","TreeItem","nodeId","Array","isArray","node","Create","JSON","stringify","upload","maxWidth","BackingTracks","toggleUpload","setToggleUpload","flexGrow","menuButton","marginRight","Appbar","AppBar","position","Toolbar","component","Link","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f060486.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nclass Info extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>info</h1>\n      </div>\n    );\n  }\n}\nexport default Info;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    margin: \"20px\",\n    backgroundColor: \"#FFFDD0\",\n    display: \"flex\",\n  },\n\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\nconst Signup = () => {\n  const classes = useStyles();\n  const style = {\n    display: \"block\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  };\n  return (\n    <main class=\"container\">\n      <article class=\"grid\">\n        <Card className={classes.root}>\n          <CardContent>\n            <div>\n              <hgroup>\n                <h1>Sign up</h1>\n              </hgroup>\n              <form action=\"/users\" method=\"post\">\n                <input\n                  style={style}\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                />\n                <input\n                  style={style}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n\n                <button type=\"submit\" class=\"contrast\">\n                  Sign up\n                </button>\n              </form>\n            </div>\n          </CardContent>\n        </Card>\n      </article>\n    </main>\n  );\n};\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    margin: \"20px\",\n    backgroundColor: \"#FFFDD0\",\n    display: \"flex\",\n  },\n\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\n\nconst Login = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateUsername = (event) => {\n    setUsername(event.target.value);\n  };\n  const updatePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const submit = () => {\n    fetch(\"/login/password/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify({ username, password }),\n    }).then(function (res) {\n      console.log(res);\n    });\n  };\n\n  return (\n    <main class=\"container\">\n      <article class=\"grid\">\n        {/* <div>\n          <TextField\n            className={classes.root}\n            onChange={updateUsername}\n            id=\"standard-basic\"\n            label=\"Username\"\n          />\n          <TextField\n            onChange={updatePassword}\n            className={classes.root}\n            id=\"standard-basic\"\n            label=\"Password\"\n          />\n          <Button onClick={submit} variant=\"outlined\" className={classes.root}>\n            Submit\n          </Button>\n        </div> */}\n\n        <Card className={classes.root}>\n          <CardContent>\n            <div>\n              <hgroup>\n                <h1>Log in</h1>\n              </hgroup>\n              <form action=\"/login/password\" method=\"post\">\n                <input\n                  style={{ display: \"block\" }}\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                />\n                <input\n                  style={{\n                    display: \"block\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <button\n                  style={{\n                    display: \"block\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                  type=\"submit\"\n                  class=\"contrast\"\n                >\n                  Sign in\n                </button>\n              </form>\n            </div>\n            <div>\n              <Link className={classes.root} to=\"/signup\">\n                Create an account\n              </Link>\n            </div>\n          </CardContent>\n          <CardActions></CardActions>\n        </Card>\n      </article>\n    </main>\n  );\n};\nexport default Login;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../card.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n});\nconst Discover = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n  const [songs, setSongs] = useState([]);\n  const [currentSongId, setCurrentSongId] = useState(-1);\n\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const getUser = async () => {\n    fetch(\"/getUser\").then((data) => {\n      data.json().then((json) => {\n        setUser(json);\n      });\n    });\n  };\n\n  const getSongs = () => {\n    fetch(\"/songs\").then((data) => {\n      data.json().then((json) => {\n        setSongs(json.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    setUser(getUser());\n    getSongs();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        {songs.map((song, index) => (\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              className={\n                song.song_id === currentSongId ? \"card-selector\" : classes.root\n              }\n            >\n              <CardContent>\n                <Link to={\"/song/\" + song.song_id.toString()}>\n                  <Typography\n                    className={classes.title}\n                    color=\"textPrimary\"\n                    gutterBottom\n                    style={{ display: \"inline\" }}\n                  >\n                    {song.name}\n                  </Typography>\n                </Link>\n                <Typography\n                  className={classes.author}\n                  color=\"textPrimary\"\n                  gutterBottom\n                  style={{ display: \"inline\" }}\n                >\n                  {\" by \" + song.username}\n                </Typography>\n                {/* <Typography\n                  className={classes.author}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  by {song.username}\n                </Typography> */}\n                <AudioPlayer\n                  src={song.s3key}\n                  onPlay={(e) => setCurrentSongId(song.song_id)}\n                  style={{ opacity: \"0.5\" }}\n                  // other props here\n                />\n              </CardContent>\n              <CardActions>\n                {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n              </CardActions>\n            </Card>\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Discover;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Message = ({ msg }) => {\n  return (\n    <div className=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\n      {msg}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Progress = ({ percentage }) => {\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"progress-bar progress-bar-striped bg-success\"\n        role=\"progressbar\"\n        style={{ width: `${percentage}%` }}\n      >\n        {percentage}%\n      </div>\n    </div>\n  );\n};\n\nProgress.propTypes = {\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Progress;\n","import React, { Fragment, useState } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nvar _ = require(\"lodash\");\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst FileUpload = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [songName, setSongName] = useState(\"\");\n\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const changeSongName = (event) => {\n    setSongName(event.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    if (_.keys(props.user).length === 0 || props.user == null) {\n      openSnackBar();\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"file\", file);\n    formData.append(\"previousPath\", props.previousPath);\n    formData.append(\"songName\", songName);\n    formData.append(\"authorId\", props.user.user_id);\n    formData.append(\"original\", props.original);\n\n    try {\n      const res = await axios.post(\"/aws/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n        },\n      });\n\n      // Clear percentage\n      setTimeout(() => setUploadPercentage(0), 10000);\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n      setUploadPercentage(0);\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"warning\">\n          Must be logged in to upload files\n        </Alert>\n      </Snackbar>\n      <form onSubmit={onSubmit}>\n        <div className=\"custom-file mb-4\">\n          {/* <input type=\"text\" value={songName} onChange={changeSongName} /> */}\n          <TextField\n            value={songName}\n            onChange={changeSongName}\n            id=\"standard-basic\"\n            label=\"Song name\"\n          />\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"customFile\"\n            onChange={onChange}\n            style={{ display: \"block\" }}\n          />\n          {/* <label className=\"custom-file-label\" htmlFor=\"customFile\">\n            {filename}\n          </label> */}\n\n          <Progress percentage={uploadPercentage} />\n\n          <input\n            type=\"submit\"\n            value=\"Upload\"\n            className=\"btn btn-primary btn-block mt-4\"\n          />\n        </div>\n      </form>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto\">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\n// import \"react-h5-audio-player/lib/styles.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport FileUpload from \"../components/FileUpload\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { UserContext } from \"../UserContext\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\n\nconst Song = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  let transformedData = (input) => {\n    var output = [];\n    for (var i = 0; i < input.length; i++) {\n      var chain = input[i].path.split(\".\");\n      var currentNode = output;\n      for (var j = 0; j < chain.length; j++) {\n        var wantedNode = chain[j];\n        var lastNode = currentNode;\n        for (var k = 0; k < currentNode.length; k++) {\n          if (currentNode[k].pathName == wantedNode) {\n            currentNode = currentNode[k].children;\n            break;\n          }\n        }\n        // If we couldn't find an item in this list of children\n        // that has the right pathName , create one:\n        if (lastNode == currentNode) {\n          var newNode = (currentNode[k] = {\n            id: input[i].song_id,\n            name: input[i].name,\n            pathName: wantedNode,\n            children: [],\n          });\n          currentNode = newNode.children;\n        }\n      }\n    }\n    return output[0];\n  };\n\n  const { id } = useParams();\n\n  const [songData, setSongData] = useState([]);\n  const [remixing, setRemixing] = useState(false);\n  const [allSongData, setAllSongData] = useState([]);\n  const [familyTree, setFamilyTree] = useState([]);\n\n  const toggleRemixing = () => {\n    setRemixing(remixing ? false : true);\n  };\n\n  const renderTree = (nodes) => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {Array.isArray(nodes.children)\n        ? nodes.children.map((node) => renderTree(node))\n        : null}\n    </TreeItem>\n  );\n\n  useEffect(() => {\n    console.log(\"mounted\");\n    fetch(`/songs/${id}`).then((data) => {\n      data.json().then((json) => {\n        console.log(json.data[0]);\n        setSongData(json.data[0]);\n\n        let originalAncestor = json.data[0].path.split(\".\")[0];\n        console.log(\"original ancestor: \", originalAncestor);\n\n        fetch(`/songs/getTree/${originalAncestor}`).then((data) => {\n          data.json().then((json) => {\n            console.log(json.data);\n            setAllSongData(json.data);\n            setFamilyTree(transformedData(json.data));\n          });\n        });\n      });\n    });\n  }, []);\n\n  const selectFromTree = (event, value) => {\n    console.log(value);\n\n    allSongData.forEach((datum) => {\n      if (datum.song_id === value) {\n        setSongData(datum);\n      }\n    });\n  };\n\n  const download = (url, name) => {\n    if (!url) {\n      throw new Error(\"Resource URL not provided! You need to provide one\");\n    }\n\n    fetch(url)\n      .then((response) => response.blob())\n      .then((blob) => {\n        const blobURL = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = blobURL;\n        a.style = \"display: none\";\n\n        if (name && name.length) a.download = name;\n        document.body.appendChild(a);\n        a.click();\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textPrimary\"\n            gutterBottom\n            style={{ display: \"inline\" }}\n          >\n            {songData.name}\n          </Typography>\n\n          <AudioPlayer\n            src={songData.s3key}\n            onPlay={(e) => console.log(\"onPlay\")}\n            style={{ opacity: \"0.5\" }}\n            // other props here\n          />\n\n          <IconButton\n            onClick={() => {\n              download(songData.s3key, `${songData.name}.mp3`);\n            }}\n          >\n            <CloudDownloadIcon />\n          </IconButton>\n\n          {/* <a href={songData.s3key} download=\"filename.mp3\">\n            Click to download\n          </a> */}\n\n          <Button variant=\"outlined\" onClick={toggleRemixing}>\n            Upload a remix\n          </Button>\n          {remixing && (\n            <FileUpload\n              previousPath={songData.path}\n              user={user}\n              original={false}\n            />\n          )}\n        </CardContent>\n        <CardActions>\n          {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n        </CardActions>\n      </Card>\n\n      <Card className={classes.root}>\n        <CardContent>\n          <TreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpanded={[\"root\"]}\n            defaultExpandIcon={<ChevronRightIcon />}\n            onNodeSelect={selectFromTree}\n          >\n            {renderTree(familyTree)}\n          </TreeView>\n        </CardContent>\n        <CardActions>\n          {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\nexport default Song;\n","import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport FileUpload from \"../components/FileUpload\";\n\nconst Create = () => {\n  const { user } = useContext(UserContext);\n\n  const [songName, setSongName] = useState(\"\");\n\n  // const changeSongName = (event) => {\n  //   setSongName(event.target.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <p>{JSON.stringify(user)}</p>\n      {/* <input type=\"text\" value={songName} onChange={changeSongName} /> */}\n      <FileUpload previousPath=\"\" user={user} original={true} />\n    </div>\n  );\n};\nexport default Create;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FileUpload from \"../components/FileUpload\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../card.css\";\nvar _ = require(\"lodash\");\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  upload: {\n    backgroundColor: \"#FFFDD0\",\n    maxWidth: \"200px\",\n  },\n});\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst BackingTracks = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n  const [songs, setSongs] = useState([]);\n  const [toggleUpload, setToggleUpload] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [currentSongId, setCurrentSongId] = useState(-1);\n\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const getUser = async () => {\n    fetch(\"/getUser\").then((data) => {\n      data.json().then((json) => {\n        setUser(json);\n      });\n    });\n  };\n\n  const getSongs = () => {\n    fetch(\"/songs/backingtracks\").then((data) => {\n      data.json().then((json) => {\n        setSongs(json.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    setUser(getUser());\n    getSongs();\n  }, []);\n\n  const handleToggleUpload = () => {\n    if (_.keys(user).length === 0) {\n      openSnackBar();\n      return;\n    }\n    setToggleUpload(toggleUpload ? false : true);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"warning\">\n            Must be logged in to upload\n          </Alert>\n        </Snackbar>\n      </div>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Card className={classes.upload}>\n          <CardContent>\n            <Button variant=\"outlined\" onClick={handleToggleUpload}>\n              Create new backing track\n            </Button>\n            {toggleUpload && (\n              <FileUpload previousPath=\"\" user={user} original={true} />\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <div>\n        {songs.map((song, index) => (\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              className={\n                song.song_id === currentSongId ? \"card-selector\" : classes.root\n              }\n            >\n              <CardContent>\n                <Link to={\"/song/\" + song.song_id.toString()}>\n                  <Typography\n                    className={classes.title}\n                    color=\"textPrimary\"\n                    gutterBottom\n                    style={{ display: \"inline\" }}\n                  >\n                    {song.name}\n                  </Typography>\n                </Link>\n                <Typography\n                  className={classes.author}\n                  color=\"textPrimary\"\n                  gutterBottom\n                  style={{ display: \"inline\" }}\n                >\n                  {\" by \" + song.username}\n                </Typography>\n                {/* <Typography\n                  className={classes.author}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  by {song.username}\n                </Typography> */}\n                <AudioPlayer\n                  src={song.s3key}\n                  onPlay={(e) => setCurrentSongId(song.song_id)}\n                  style={{ opacity: \"0.5\" }}\n                  // other props here\n                />\n              </CardContent>\n              <CardActions>\n                {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n              </CardActions>\n            </Card>\n          </span>\n        ))}\n      </div>\n    </div>\n    // <div className=\"App\">\n    // <div className={classes.root}>\n    //   <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n    //     <Alert onClose={handleClose} severity=\"warning\">\n    //       Must be logged in to upload\n    //     </Alert>\n    //   </Snackbar>\n    // </div>\n    // <p></p>\n    // <Button variant=\"outlined\" onClick={handleToggleUpload}>\n    //   Create new backing track\n    // </Button>\n    // {toggleUpload && (\n    //   <FileUpload previousPath=\"\" user={user} original={true} />\n    // )}\n    //   <TableContainer component={Paper}>\n    //     <Table className={classes.table} aria-label=\"simple table\">\n    //       <TableHead>\n    //         <TableRow>\n    //           <TableCell>Song Name</TableCell>\n    //           <TableCell>audio player</TableCell>\n    //           <TableCell>author</TableCell>\n    //           <TableCell></TableCell>\n    //         </TableRow>\n    //       </TableHead>\n    //       <TableBody>\n    //         {songs.map((song, index) => (\n    //           <TableRow key={song.name}>\n    //             <TableCell>{song.name}</TableCell>\n    //             <TableCell component=\"th\" scope=\"row\">\n    //               <AudioPlayer\n    //                 src={song.s3key}\n    //                 onPlay={(e) => console.log(\"onPlay\")}\n    //                 header={song.name}\n    //                 // other props here\n    //               />\n    //             </TableCell>\n    //             <TableCell>\n    //               <p>{song.username}</p>\n    //             </TableCell>\n    //             <TableCell>\n    //               <Button\n    //                 variant=\"outlined\"\n    //                 component={Link}\n    //                 to={\"/song/\" + song.song_id.toString()}\n    //               >\n    //                 {\"Remix >\"}\n    //               </Button>\n    //             </TableCell>\n    //           </TableRow>\n    //         ))}\n    //       </TableBody>\n    //     </Table>\n    //   </TableContainer>\n    // </div>\n  );\n};\nexport default BackingTracks;\n","import React, { useState, useContext } from \"react\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar _ = require(\"lodash\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    color: \"#FFFDD0\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  username: {\n    marginRight: theme.spacing(2),\n    color: \"black\",\n  },\n}));\n\nconst Appbar = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  const logout = () => {\n    fetch(\"/logout\");\n    setUser({});\n  };\n\n  const userLoggedin = () => {\n    if (_.keys(user).length === 0 || user === null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ backgroundColor: \"#FFFDD0\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.menuButton}>\n            <Link to={\"/\"}>Jamband</Link>\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            component={Link}\n            to={\"/backingtracks\"}\n            className={classes.menuButton}\n          >\n            Backing Tracks\n          </Button>\n          <Typography variant=\"h6\" className={classes.title}></Typography>\n\n          {_.keys(user).length === 0 && (\n            <div>\n              <Button variant=\"outlined\" component={Link} to={\"/login\"}>\n                Log in\n              </Button>\n\n              <Button variant=\"outlined\" component={Link} to={\"/signup\"}>\n                Sign up\n              </Button>\n            </div>\n          )}\n          <Typography variant=\"h6\" className={classes.username}>\n            {_.keys(user).length > 0 && user.username}\n          </Typography>\n\n          {_.keys(user).length > 0 && (\n            <Button variant=\"outlined\" component={Link} onClick={logout}>\n              Logout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Appbar;\n","import React, { useState, useEffect } from \"react\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./views/home\";\nimport Info from \"./views/info\";\nimport Signup from \"./views/signup\";\nimport Login from \"./views/login\";\nimport Discover from \"./views/discover\";\nimport Song from \"./views/song\";\nimport Create from \"./views/create\";\nimport BackingTracks from \"./views/BackingTracks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"./UserContext\";\n\nimport Appbar from \"./components/Appbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const getUser = async () => {\n    fetch(\"/getUser\").then((data) => {\n      data.json().then((json) => {\n        setUser(json);\n      });\n    });\n  };\n\n  useEffect(() => {\n    setUser(getUser());\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <UserContext.Provider value={{ user, setUser }}>\n          <Appbar></Appbar>\n          <Switch>\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/song/:id\">\n              <Song />\n            </Route>\n            <Route path=\"/backingtracks\">\n              <BackingTracks />\n            </Route>\n            <Route path=\"/\">\n              <Discover />\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}