{"version":3,"sources":["views/info.jsx","views/signup.jsx","views/login.jsx","UserContext.jsx","views/discover.jsx","components/Message.js","components/Progress.js","components/FileUpload.js","views/song.jsx","views/create.jsx","views/BackingTracks.jsx","components/Appbar.js","App.js","reportWebVitals.js","index.js"],"names":["Info","className","Component","useStyles","makeStyles","root","minWidth","margin","backgroundColor","display","title","fontSize","author","tree","Signup","classes","style","marginTop","marginBottom","class","Card","CardContent","action","method","type","name","placeholder","Login","useState","to","CardActions","UserContext","createContext","_","require","Alert","props","elevation","variant","bullet","transform","alert","width","Discover","useContext","user","setUser","songs","setSongs","currentSongId","setCurrentSongId","React","open","setOpen","handleClose","event","reason","audioPlayers","useRef","useEffect","userId","keys","length","user_id","fetch","headers","body","JSON","stringify","then","data","json","getSongs","vote","songId","liked","forEach","song","index","song_id","newSongs","console","log","total_votes","Number","parseInt","liked_by_current_user","Snackbar","autoHideDuration","onClose","severity","map","justifyContent","toString","Typography","color","gutterBottom","username","src","s3key","onPlay","e","currentId","current","id","aPlayer","player","audio","pause","opacity","ref","element","push","IconButton","onClick","undefined","Message","msg","role","Progress","percentage","theme","spacing","FileUpload","file","setFile","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","songName","setSongName","onSubmit","a","preventDefault","formData","FormData","append","previousPath","original","axios","post","onUploadProgress","progressEvent","Math","round","loaded","total","res","setTimeout","fileName","filePath","response","status","TextField","value","onChange","target","label","files","alt","marginLeft","marginRight","Song","parentNodeIds","playing","setPlaying","useParams","songData","setSongData","remixing","setRemixing","allSongData","setAllSongData","familyTree","setFamilyTree","openSnackBar","originalAncestor","path","split","input","output","i","chain","currentNode","j","wantedNode","lastNode","k","pathName","children","newNode","transformedData","onPause","url","Error","blob","blobURL","URL","createObjectURL","document","createElement","href","download","appendChild","click","catch","Button","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","onNodeSelect","datum","renderTree","nodes","TreeItem","nodeId","onLabelClick","Array","isArray","node","Create","upload","maxWidth","BackingTracks","toggleUpload","setToggleUpload","flexGrow","menuButton","Appbar","AppBar","position","Toolbar","component","Link","App","getUser","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a56af472.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nclass Info extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>info</h1>\n      </div>\n    );\n  }\n}\nexport default Info;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    margin: \"20px\",\n    backgroundColor: \"#FFFDD0\",\n    display: \"flex\",\n  },\n\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\nconst Signup = () => {\n  const classes = useStyles();\n  const style = {\n    display: \"block\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  };\n  return (\n    <main class=\"container\">\n      <article class=\"grid\">\n        <Card className={classes.root}>\n          <CardContent>\n            <div>\n              <hgroup>\n                <h1>Sign up</h1>\n              </hgroup>\n              <form action=\"/users\" method=\"post\">\n                <input\n                  style={style}\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                />\n                <input\n                  style={style}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n\n                <button type=\"submit\" class=\"contrast\">\n                  Sign up\n                </button>\n              </form>\n            </div>\n          </CardContent>\n        </Card>\n      </article>\n    </main>\n  );\n};\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    margin: \"20px\",\n    backgroundColor: \"#FFFDD0\",\n    display: \"flex\",\n  },\n\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\n\nconst Login = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const updateUsername = (event) => {\n    setUsername(event.target.value);\n  };\n  const updatePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const submit = () => {\n    fetch(\"/login/password/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify({ username, password }),\n    }).then(function (res) {\n      console.log(res);\n    });\n  };\n\n  return (\n    <main class=\"container\">\n      <article class=\"grid\">\n        {/* <div>\n          <TextField\n            className={classes.root}\n            onChange={updateUsername}\n            id=\"standard-basic\"\n            label=\"Username\"\n          />\n          <TextField\n            onChange={updatePassword}\n            className={classes.root}\n            id=\"standard-basic\"\n            label=\"Password\"\n          />\n          <Button onClick={submit} variant=\"outlined\" className={classes.root}>\n            Submit\n          </Button>\n        </div> */}\n\n        <Card className={classes.root}>\n          <CardContent>\n            <div>\n              <hgroup>\n                <h1>Log in</h1>\n              </hgroup>\n              <form action=\"/login/password\" method=\"post\">\n                <input\n                  style={{ display: \"block\" }}\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                />\n                <input\n                  style={{\n                    display: \"block\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <button\n                  style={{\n                    display: \"block\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                  type=\"submit\"\n                  class=\"contrast\"\n                >\n                  Sign in\n                </button>\n              </form>\n            </div>\n            <div>\n              <Link className={classes.root} to=\"/signup\">\n                Create an account\n              </Link>\n            </div>\n          </CardContent>\n          <CardActions></CardActions>\n        </Card>\n      </article>\n    </main>\n  );\n};\nexport default Login;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../card.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpOutlinedIcon from \"@material-ui/icons/ThumbUpOutlined\";\nimport ThumbDownOutlinedIcon from \"@material-ui/icons/ThumbDownOutlined\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nvar _ = require(\"lodash\");\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: \"10px\",\n    },\n  },\n});\nconst Discover = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n  const [songs, setSongs] = useState([]);\n  const [currentSongId, setCurrentSongId] = useState(-1);\n  const [open, setOpen] = React.useState(false);\n\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const audioPlayers = useRef([]);\n\n  const getSongs = () => {\n    let userId = -1;\n    if (_.keys(user).length > 0) {\n      userId = user.user_id;\n    }\n    fetch(\"/songs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify({ userId }),\n    }).then((data) => {\n      data.json().then((json) => {\n        setSongs(json.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getSongs();\n  }, [user]);\n\n  const pauseAllButtonsExceptCurrent = (currentId) => {\n    // console.log(audioPlayers.current[0].player);\n    console.log(audioPlayers.current[0].id);\n    console.log(currentId);\n    // if (audioPlayers.current[0].id !== currentId) {\n    //   audioPlayers.current[0].player.audio.current.pause();\n    // }\n\n    audioPlayers.current.forEach((aPlayer) => {\n      if (aPlayer.id !== currentId) {\n        if (aPlayer.player) {\n          aPlayer.player.audio.current.pause();\n        }\n      }\n    });\n  };\n\n  const vote = (songId, liked) => {\n    if (_.keys(user).length === 0) {\n      openSnackBar();\n      return;\n    }\n    fetch(\"/votes\", {\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify({ songId, liked, userId: user.user_id }), // body data type must match \"Content-Type\" header\n    }).then((data) => {\n      data.json().then((json) => {\n        songs.forEach((song, index) => {\n          if (json.songId === song.song_id) {\n            const newSongs = [...songs];\n            console.log(json);\n            newSongs[index].total_votes = Number.parseInt(\n              newSongs[index].total_votes\n            );\n\n            if (song.liked_by_current_user === false) {\n              if (json.liked) {\n                newSongs[index].total_votes += 2;\n              } else {\n                newSongs[index].total_votes += 1;\n              }\n            }\n            if (song.liked_by_current_user === null) {\n              if (json.liked) {\n                newSongs[index].total_votes += 1;\n              } else {\n                newSongs[index].total_votes -= 1;\n              }\n            }\n            if (song.liked_by_current_user === true) {\n              if (json.liked === null) {\n                newSongs[index].total_votes -= 1;\n              } else {\n                newSongs[index].total_votes -= 2;\n              }\n            }\n            newSongs[index].liked_by_current_user = json.liked;\n\n            setSongs(newSongs);\n          }\n        });\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"warning\">\n            Please log in to vote\n          </Alert>\n        </Snackbar>\n\n        {songs.map((song, index) => (\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              className={\n                song.song_id === currentSongId ? \"card-selector\" : classes.root\n              }\n            >\n              <CardContent>\n                <Link to={\"/song/\" + song.song_id.toString()}>\n                  <Typography\n                    className={classes.title}\n                    color=\"textPrimary\"\n                    gutterBottom\n                    style={{ display: \"inline\" }}\n                  >\n                    {song.name}\n                  </Typography>\n                </Link>\n                <Typography\n                  className={classes.author}\n                  color=\"textPrimary\"\n                  gutterBottom\n                  style={{ display: \"inline\" }}\n                >\n                  {\" by \" + song.username}\n                </Typography>\n                {/* <Typography\n                  className={classes.author}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  by {song.username}\n                </Typography> */}\n                <AudioPlayer\n                  src={song.s3key}\n                  onPlay={(e) => {\n                    pauseAllButtonsExceptCurrent(song.song_id);\n                    setCurrentSongId(song.song_id);\n                  }}\n                  style={{ opacity: \"0.5\" }}\n                  id={song.song_id}\n                  ref={(element) =>\n                    audioPlayers.current.push({\n                      id: song.song_id,\n                      player: element,\n                    })\n                  }\n                  // other props here\n                />\n              </CardContent>\n              <CardActions>\n                <p style={{ margin: \"0px\" }}>{song.total_votes}</p>\n\n                <IconButton\n                  onClick={() => {\n                    vote(song.song_id, true);\n                  }}\n                >\n                  {song.liked_by_current_user ? (\n                    <ThumbUpIcon />\n                  ) : (\n                    <ThumbUpOutlinedIcon />\n                  )}\n                </IconButton>\n\n                <IconButton\n                  onClick={() => {\n                    vote(song.song_id, false);\n                  }}\n                >\n                  {song.liked_by_current_user != true &&\n                  song.liked_by_current_user != undefined ? (\n                    <ThumbDownIcon />\n                  ) : (\n                    <ThumbDownOutlinedIcon />\n                  )}\n                </IconButton>\n              </CardActions>\n            </Card>\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Discover;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Message = ({ msg }) => {\n  return (\n    <div className=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\n      {msg}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Progress = ({ percentage }) => {\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"progress-bar progress-bar-striped bg-success\"\n        role=\"progressbar\"\n        style={{ width: `${percentage}%` }}\n      >\n        {percentage}%\n      </div>\n    </div>\n  );\n};\n\nProgress.propTypes = {\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Progress;\n","import React, { Fragment, useState } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nvar _ = require(\"lodash\");\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst FileUpload = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [songName, setSongName] = useState(\"\");\n\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const changeSongName = (event) => {\n    setSongName(event.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    if (_.keys(props.user).length === 0 || props.user == null) {\n      openSnackBar();\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"file\", file);\n    formData.append(\"previousPath\", props.previousPath);\n    formData.append(\"songName\", songName);\n    formData.append(\"authorId\", props.user.user_id);\n    formData.append(\"original\", props.original);\n\n    try {\n      const res = await axios.post(\"/aws/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n        },\n      });\n\n      // Clear percentage\n      setTimeout(() => setUploadPercentage(0), 10000);\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n      setUploadPercentage(0);\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"warning\">\n          Must be logged in to upload files\n        </Alert>\n      </Snackbar>\n      <form onSubmit={onSubmit}>\n        <div className=\"custom-file mb-4\">\n          {/* <input type=\"text\" value={songName} onChange={changeSongName} /> */}\n          <TextField\n            value={songName}\n            onChange={changeSongName}\n            id=\"standard-basic\"\n            label=\"Song name\"\n          />\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"customFile\"\n            onChange={onChange}\n            style={{ display: \"block\" }}\n          />\n          {/* <label className=\"custom-file-label\" htmlFor=\"customFile\">\n            {filename}\n          </label> */}\n\n          <Progress percentage={uploadPercentage} />\n\n          <input\n            type=\"submit\"\n            value=\"Upload\"\n            className=\"btn btn-primary btn-block mt-4\"\n          />\n        </div>\n      </form>\n      {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto\">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\n// import \"react-h5-audio-player/lib/styles.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport FileUpload from \"../components/FileUpload\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { UserContext } from \"../UserContext\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"../card.css\";\nvar _ = require(\"lodash\");\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    marginLeft: \"12px\",\n    marginRight: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  tree: {},\n});\n\nconst Song = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n  const parentNodeIds = [];\n  const [playing, setPlaying] = useState(false);\n\n  let transformedData = (input) => {\n    var output = [];\n    for (var i = 0; i < input.length; i++) {\n      var chain = input[i].path.split(\".\");\n      var currentNode = output;\n      for (var j = 0; j < chain.length; j++) {\n        var wantedNode = chain[j];\n        var lastNode = currentNode;\n        for (var k = 0; k < currentNode.length; k++) {\n          if (currentNode[k].pathName == wantedNode) {\n            currentNode = currentNode[k].children;\n            break;\n          }\n        }\n        // If we couldn't find an item in this list of children\n        // that has the right pathName , create one:\n        if (lastNode == currentNode) {\n          parentNodeIds.push(input[i].song_id);\n          var newNode = (currentNode[k] = {\n            id: input[i].song_id,\n            name: input[i].name,\n            pathName: wantedNode,\n            children: [],\n          });\n          currentNode = newNode.children;\n        }\n      }\n    }\n    return output[0];\n  };\n\n  const { id } = useParams();\n\n  const [songData, setSongData] = useState([]);\n  const [remixing, setRemixing] = useState(false);\n  const [allSongData, setAllSongData] = useState([]);\n  const [familyTree, setFamilyTree] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const toggleRemixing = () => {\n    if (_.keys(user).length === 0) {\n      openSnackBar();\n      return;\n    }\n    setRemixing(remixing ? false : true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n  const renderTree = (nodes) => (\n    <TreeItem\n      key={nodes.id}\n      nodeId={nodes.id}\n      label={nodes.name}\n      onLabelClick={(event) => {\n        event.preventDefault();\n      }}\n    >\n      {Array.isArray(nodes.children)\n        ? nodes.children.map((node) => renderTree(node))\n        : null}\n    </TreeItem>\n  );\n\n  useEffect(() => {\n    console.log(\"mounted\");\n    fetch(`/songs/${id}`).then((data) => {\n      data.json().then((json) => {\n        console.log(json.data[0]);\n        setSongData(json.data[0]);\n\n        let originalAncestor = json.data[0].path.split(\".\")[0];\n        console.log(\"original ancestor: \", originalAncestor);\n\n        fetch(`/songs/getTree/${originalAncestor}`).then((data) => {\n          data.json().then((json) => {\n            console.log(json.data);\n            setAllSongData(json.data);\n            setFamilyTree(transformedData(json.data));\n          });\n        });\n      });\n    });\n  }, []);\n\n  const selectFromTree = (event, value) => {\n    console.log(value);\n\n    allSongData.forEach((datum) => {\n      if (datum.song_id === value) {\n        setSongData(datum);\n      }\n    });\n  };\n\n  const download = (url, name) => {\n    if (!url) {\n      throw new Error(\"Resource URL not provided! You need to provide one\");\n    }\n\n    fetch(url)\n      .then((response) => response.blob())\n      .then((blob) => {\n        const blobURL = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = blobURL;\n        a.style = \"display: none\";\n\n        if (name && name.length) a.download = name;\n        document.body.appendChild(a);\n        a.click();\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"warning\">\n            Please log in to upload\n          </Alert>\n        </Snackbar>\n      </div>\n      <Card className={playing ? \"song-card-selector\" : classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textPrimary\"\n            gutterBottom\n            style={{ display: \"inline\" }}\n          >\n            {songData.name}\n          </Typography>\n\n          <AudioPlayer\n            src={songData.s3key}\n            onPlay={(e) => {\n              setPlaying(true);\n            }}\n            onPause={(e) => {\n              setPlaying(false);\n            }}\n            style={{ opacity: \"0.5\" }}\n            // other props here\n          />\n\n          <IconButton\n            onClick={() => {\n              download(songData.s3key, `${songData.name}.mp3`);\n            }}\n          >\n            <CloudDownloadIcon />\n          </IconButton>\n\n          {/* <a href={songData.s3key} download=\"filename.mp3\">\n            Click to download\n          </a> */}\n\n          <Button variant=\"outlined\" onClick={toggleRemixing}>\n            Upload a remix\n          </Button>\n          {remixing && (\n            <FileUpload\n              previousPath={songData.path}\n              user={user}\n              original={false}\n            />\n          )}\n        </CardContent>\n        <CardActions>\n          {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n        </CardActions>\n      </Card>\n\n      <Card className={classes.root}>\n        <CardContent>\n          <h3>Song ancestry </h3>\n          <TreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpanded={parentNodeIds}\n            defaultExpandIcon={<ChevronRightIcon />}\n            onNodeSelect={selectFromTree}\n          >\n            {renderTree(familyTree)}\n          </TreeView>\n        </CardContent>\n        <CardActions>\n          {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\nexport default Song;\n","import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport FileUpload from \"../components/FileUpload\";\n\nconst Create = () => {\n  const { user } = useContext(UserContext);\n\n  const [songName, setSongName] = useState(\"\");\n\n  // const changeSongName = (event) => {\n  //   setSongName(event.target.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <p>{JSON.stringify(user)}</p>\n      {/* <input type=\"text\" value={songName} onChange={changeSongName} /> */}\n      <FileUpload previousPath=\"\" user={user} original={true} />\n    </div>\n  );\n};\nexport default Create;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FileUpload from \"../components/FileUpload\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../card.css\";\nvar _ = require(\"lodash\");\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 700,\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n    backgroundColor: \"#FFFDD0\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 18,\n  },\n  author: {\n    fontSize: 13,\n  },\n  upload: {\n    backgroundColor: \"#FFFDD0\",\n    maxWidth: \"200px\",\n  },\n});\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst BackingTracks = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n  const [songs, setSongs] = useState([]);\n  const [toggleUpload, setToggleUpload] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [currentSongId, setCurrentSongId] = useState(-1);\n  const audioPlayers = useRef([]);\n\n  const openSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  // const getUser = async () => {\n  //   fetch(\"/getUser\").then((data) => {\n  //     data.json().then((json) => {\n  //       setUser(json);\n  //     });\n  //   });\n  // };\n\n  const getSongs = () => {\n    fetch(\"/songs/backingtracks\").then((data) => {\n      data.json().then((json) => {\n        setSongs(json.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    // setUser(getUser());\n    getSongs();\n  }, []);\n\n  const handleToggleUpload = () => {\n    if (_.keys(user).length === 0) {\n      openSnackBar();\n      return;\n    }\n    setToggleUpload(toggleUpload ? false : true);\n  };\n\n  const pauseAllButtonsExceptCurrent = (currentId) => {\n    // console.log(audioPlayers.current[0].player);\n    console.log(audioPlayers.current[0].id);\n    console.log(currentId);\n    // if (audioPlayers.current[0].id !== currentId) {\n    //   audioPlayers.current[0].player.audio.current.pause();\n    // }\n\n    audioPlayers.current.forEach((aPlayer) => {\n      if (aPlayer.id !== currentId) {\n        if (aPlayer.player) {\n          aPlayer.player.audio.current.pause();\n        }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"warning\">\n            Please log in to upload\n          </Alert>\n        </Snackbar>\n      </div>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Card className={classes.upload}>\n          <CardContent>\n            <Button variant=\"outlined\" onClick={handleToggleUpload}>\n              Create new backing track\n            </Button>\n            {toggleUpload && (\n              <FileUpload previousPath=\"\" user={user} original={true} />\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <div>\n        {songs.map((song, index) => (\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              className={\n                song.song_id === currentSongId ? \"card-selector\" : classes.root\n              }\n            >\n              <CardContent>\n                <Link to={\"/song/\" + song.song_id.toString()}>\n                  <Typography\n                    className={classes.title}\n                    color=\"textPrimary\"\n                    gutterBottom\n                    style={{ display: \"inline\" }}\n                  >\n                    {song.name}\n                  </Typography>\n                </Link>\n                <Typography\n                  className={classes.author}\n                  color=\"textPrimary\"\n                  gutterBottom\n                  style={{ display: \"inline\" }}\n                >\n                  {\" by \" + song.username}\n                </Typography>\n                {/* <Typography\n                  className={classes.author}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  by {song.username}\n                </Typography> */}\n                <AudioPlayer\n                  src={song.s3key}\n                  onPlay={(e) => {\n                    pauseAllButtonsExceptCurrent(song.song_id);\n                    setCurrentSongId(song.song_id);\n                  }}\n                  ref={(element) =>\n                    audioPlayers.current.push({\n                      id: song.song_id,\n                      player: element,\n                    })\n                  }\n                  style={{ opacity: \"0.5\" }}\n                  // other props here\n                />\n              </CardContent>\n              <CardActions>\n                {/* <Button\n                  variant=\"outlined\"\n                  component={Link}\n                  to={\"/song/\" + song.song_id.toString()}\n                >\n                  {\"Remix >\"}\n                </Button> */}\n              </CardActions>\n            </Card>\n          </span>\n        ))}\n      </div>\n    </div>\n    // <div className=\"App\">\n    // <div className={classes.root}>\n    //   <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n    //     <Alert onClose={handleClose} severity=\"warning\">\n    //       Must be logged in to upload\n    //     </Alert>\n    //   </Snackbar>\n    // </div>\n    // <p></p>\n    // <Button variant=\"outlined\" onClick={handleToggleUpload}>\n    //   Create new backing track\n    // </Button>\n    // {toggleUpload && (\n    //   <FileUpload previousPath=\"\" user={user} original={true} />\n    // )}\n    //   <TableContainer component={Paper}>\n    //     <Table className={classes.table} aria-label=\"simple table\">\n    //       <TableHead>\n    //         <TableRow>\n    //           <TableCell>Song Name</TableCell>\n    //           <TableCell>audio player</TableCell>\n    //           <TableCell>author</TableCell>\n    //           <TableCell></TableCell>\n    //         </TableRow>\n    //       </TableHead>\n    //       <TableBody>\n    //         {songs.map((song, index) => (\n    //           <TableRow key={song.name}>\n    //             <TableCell>{song.name}</TableCell>\n    //             <TableCell component=\"th\" scope=\"row\">\n    //               <AudioPlayer\n    //                 src={song.s3key}\n    //                 onPlay={(e) => console.log(\"onPlay\")}\n    //                 header={song.name}\n    //                 // other props here\n    //               />\n    //             </TableCell>\n    //             <TableCell>\n    //               <p>{song.username}</p>\n    //             </TableCell>\n    //             <TableCell>\n    //               <Button\n    //                 variant=\"outlined\"\n    //                 component={Link}\n    //                 to={\"/song/\" + song.song_id.toString()}\n    //               >\n    //                 {\"Remix >\"}\n    //               </Button>\n    //             </TableCell>\n    //           </TableRow>\n    //         ))}\n    //       </TableBody>\n    //     </Table>\n    //   </TableContainer>\n    // </div>\n  );\n};\nexport default BackingTracks;\n","import React, { useState, useContext } from \"react\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar _ = require(\"lodash\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    color: \"#FFFDD0\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  username: {\n    marginRight: theme.spacing(2),\n    color: \"black\",\n  },\n}));\n\nconst Appbar = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  const logout = () => {\n    fetch(\"/logout\");\n    setUser({});\n  };\n\n  const userLoggedin = () => {\n    if (_.keys(user).length === 0 || user === null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ backgroundColor: \"#FFFDD0\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.menuButton}>\n            <Link to={\"/\"}>Jamband</Link>\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            component={Link}\n            to={\"/backingtracks\"}\n            className={classes.menuButton}\n          >\n            Backing Tracks\n          </Button>\n          <Typography variant=\"h6\" className={classes.title}></Typography>\n\n          {_.keys(user).length === 0 && (\n            <div>\n              <Button variant=\"outlined\" component={Link} to={\"/login\"}>\n                Log in\n              </Button>\n\n              <Button variant=\"outlined\" component={Link} to={\"/signup\"}>\n                Sign up\n              </Button>\n            </div>\n          )}\n          <Typography variant=\"h6\" className={classes.username}>\n            {_.keys(user).length > 0 && user.username}\n          </Typography>\n\n          {_.keys(user).length > 0 && (\n            <Button variant=\"outlined\" component={Link} onClick={logout}>\n              Logout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Appbar;\n","import React, { useState, useEffect } from \"react\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./views/home\";\nimport Info from \"./views/info\";\nimport Signup from \"./views/signup\";\nimport Login from \"./views/login\";\nimport Discover from \"./views/discover\";\nimport Song from \"./views/song\";\nimport Create from \"./views/create\";\nimport BackingTracks from \"./views/BackingTracks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"./UserContext\";\n\nimport Appbar from \"./components/Appbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const getUser = async () => {\n    fetch(\"/getUser\").then((data) => {\n      data.json().then((json) => {\n        setUser(json);\n      });\n    });\n  };\n\n  useEffect(() => {\n    setUser(getUser());\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <UserContext.Provider value={{ user, setUser }}>\n          <Appbar></Appbar>\n          <Switch>\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/song/:id\">\n              <Song />\n            </Route>\n            <Route path=\"/backingtracks\">\n              <BackingTracks />\n            </Route>\n            <Route path=\"/\">\n              <Discover />\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}